# spring.application.name=demo
# spring.datasource.url=jdbc:mysql://localhost:3306/bookdb
# spring.datasource.username=root
# spring.datasource.password=123456

# # 使用jdbc模式
# spring.session.store-type: none
# spring.kafka.bootstrap-servers=localhost:9092
# # 是否自动创建所需表，配置项为always(总是)、never(从不)，因我自定义了表名，所以选择手动建表
# #spring.session.jdbc.initialize-schema: always
# # 指定表名，若不配置，默认表名为:SPRING_SESSION，（还有附属表：SPRING_SESSION_ATTRIBUTES）。这里使用自定义表名
# # 超时时间 单位是秒
# #spring.session.timeout: 600
# # print the sql 
# #spring.jpa.show-sql=true    
# spring.data.redis.database=0
# spring.data.redis.host=localhost
# spring.data.redis.port=6379
# spring.data.redis.timeout=300
server:
  port: 7072
  error:
    include-message: always
spring:
  application:
    name: main-process
  session :
    store-type : none
  kafka:
    bootstrap-servers : localhost:9092
  data :
    redis: 
      database : 0
      host : localhost 
      port : 6379
      timeout : 300
      password : 
    mongodb:
      uri: mongodb://localhost:27017/bookcover
  neo4j :
    uri : bolt://localhost:7687
    authentication:
      username : neo4j
      password : press-pandora-square-pigment-epoxy-2674
  datasource:
    url: jdbc:mysql://localhost:3306/bookdb
    username : root
    password : 123456
eureka:
  instance:
    prefer-ip-address: true
    ip-address: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8040/eureka
    eureka-service-url-poll-interval-seconds: 10